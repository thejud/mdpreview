#!/usr/bin/env bash

# mdp - Markdown Preview with fzf
# Usage: mdp [mdpreview-options] [file-or-directory] [-- file-or-directory...]
# If no directory is provided, uses current directory
# Options starting with '-' are passed through to mdpreview
# After '--', all arguments are treated as paths (even if they start with '-')

# Separate mdpreview options and paths
mdpreview_options=()
paths=()
parsing_paths=false

for arg in "$@"; do
    if [[ "$arg" == "--" ]]; then
        # Everything after -- is treated as paths
        parsing_paths=true
    elif $parsing_paths; then
        # After --, everything is a path
        paths+=("$arg")
    elif [[ "$arg" == -* ]]; then
        # Before --, options starting with - go to mdpreview
        mdpreview_options+=("$arg")
    else
        # Before --, non-options are paths
        paths+=("$arg")
    fi
done

# Check if we have a single file argument
if [ ${#paths[@]} -eq 1 ] && [ -f "${paths[0]}" ]; then
    # Direct file provided, open it without fzf
    mdpreview.py "${mdpreview_options[@]}" "${paths[0]}"
else
    # Use provided directories or current directory
    if [ ${#paths[@]} -eq 0 ]; then
        paths=(".")
    fi
    
    # Find markdown files and let user select with fzf
    selected=$(find "${paths[@]}" -name "*.md" -type f 2>/dev/null | fzf --select-1 --prompt="Select markdown file: ")
    
    # Exit if no file selected
    if [ -z "$selected" ]; then
        echo "No file selected"
        exit 1
    fi
    
    # Preview the selected file with any additional options
    mdpreview.py "${mdpreview_options[@]}" "$selected"
fi
